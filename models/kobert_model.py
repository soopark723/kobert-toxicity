# -*- coding: utf-8 -*-
"""kobert_model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10Kr7s6Qk7XeGLHsrexsO09VjrzysTGsD
"""

import torch
import torch.nn as nn
from transformers import AutoModel

class HateSpeechClassifier(nn.Module):
    def __init__(self, hidden_dims=(512, 256), n_classes=5, dropout_rate=0.3):
        super().__init__()
        self.kobert = AutoModel.from_pretrained("skt/kobert-base-v1")

        self.dropout = nn.Dropout(dropout_rate)

        self.linear1 = nn.Linear(self.kobert.config.hidden_size, hidden_dims[0])
        self.relu1 = nn.ReLU()
        self.ln1 = nn.LayerNorm(hidden_dims[0])

        self.linear2 = nn.Linear(hidden_dims[0], hidden_dims[1])
        self.relu2 = nn.ReLU()
        self.ln2 = nn.LayerNorm(hidden_dims[1])

        self.linear3 = nn.Linear(hidden_dims[1], n_classes)

    def forward(self, input_ids, attention_mask):
        outputs = self.kobert(input_ids=input_ids, attention_mask=attention_mask)
        pooled_output = outputs.last_hidden_state[:, 0]  # CLS token representation

        x = self.dropout(pooled_output)
        x = self.linear1(x)
        x = self.relu1(x)
        x = self.ln1(x)

        x = self.dropout(x)
        x = self.linear2(x)
        x = self.relu2(x)
        x = self.ln2(x)

        x = self.dropout(x)
        logits = self.linear3(x)

        return logits

def get_model(device, n_classes=5):
    model = HateSpeechClassifier(n_classes=n_classes)
    return model.to(device)